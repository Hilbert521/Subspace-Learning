(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     40991,        896]
NotebookOptionsPosition[     40204,        870]
NotebookOutlinePosition[     40548,        885]
CellTagsIndexPosition[     40505,        882]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<C:\\\\Users\\\\Alexander Liao\\\\Google Drive\\\\ANN-Optimized Robot\
\\\\TrainingData10.2.17\\\\1.jpg\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "2"}], ",", 
     RowBox[{"i", "\[LessEqual]", "300"}], ",", 
     RowBox[{"i", "++"}], ",", 
     RowBox[{
      RowBox[{"b", "=", 
       RowBox[{"Import", "[", 
        RowBox[{
        "\"\<C:\\\\Users\\\\Alexander Liao\\\\Google Drive\\\\ANN-Optimized \
Robot\\\\TrainingData10.2.17\\\\\>\"", "<>", 
         RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<.jpg\>\""}], "]"}]}],
       ";", 
      RowBox[{"a", "=", " ", 
       RowBox[{"Join", "[", 
        RowBox[{"a", ",", "b"}], "]"}]}]}]}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<C:\\\\Users\\\\Alexander Liao\\\\Google Drive\\\\ANN-Optimized Robot\
\\\\TrainingData10.2.17\\\\Nope.xlsx\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MLdata", "=", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0"}], "}"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MLdata", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "=", 
   RowBox[{
    RowBox[{"a", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", 
    RowBox[{"s", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "1"}], "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "2"}], ",", 
     RowBox[{"i", "\[LessEqual]", "50"}], ",", 
     RowBox[{"i", "++"}], ",", 
     RowBox[{
      RowBox[{"MLdata", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{"a", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", 
       RowBox[{"s", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "i"}], "]"}], "]"}]}]}]}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"classes", " ", "=", " ", 
   RowBox[{"Union", "@", 
    RowBox[{"Values", "[", "MLdata", "]"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lenet", "=", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ConvolutionLayer", "[", 
        RowBox[{"20", ",", "5"}], "]"}], ",", "Ramp", ",", 
       RowBox[{"PoolingLayer", "[", 
        RowBox[{"2", ",", "2"}], "]"}], ",", 
       RowBox[{"ConvolutionLayer", "[", 
        RowBox[{"50", ",", "5"}], "]"}], ",", "Ramp", ",", 
       RowBox[{"PoolingLayer", "[", 
        RowBox[{"2", ",", "2"}], "]"}], ",", 
       RowBox[{"FlattenLayer", "[", "]"}], ",", "500", ",", "Ramp", ",", "26",
        ",", 
       RowBox[{"SoftmaxLayer", "[", "]"}]}], "}"}], ",", 
     RowBox[{"\"\<Output\>\"", "\[Rule]", 
      RowBox[{"NetDecoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Class\>\"", ",", "classes"}], "}"}], "]"}]}], ",", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", 
      RowBox[{"NetEncoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Image\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"35", ",", "100"}], "}"}]}], "}"}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"trained", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"lenet", ",", "MLdata", ",", 
    RowBox[{"MaxTrainingRounds", "\[Rule]", "15"}]}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.716149999601266*^9, 3.716150003568726*^9}, {
   3.716150295153393*^9, 3.7161503000655346`*^9}, {3.716150351097437*^9, 
   3.7161503916777487`*^9}, {3.7161504415084925`*^9, 
   3.7161504483677874`*^9}, {3.71615048514225*^9, 3.716150487944744*^9}, {
   3.71615055639606*^9, 3.7161505574336205`*^9}, {3.716150638933126*^9, 
   3.716150659538414*^9}, 3.716150690897428*^9, {3.716150746490903*^9, 
   3.716150750771845*^9}, {3.7161513248634863`*^9, 3.7161513368782854`*^9}, {
   3.7161519556235504`*^9, 3.7161519906242046`*^9}, {3.716152049164366*^9, 
   3.7161520554956126`*^9}, {3.716152348957034*^9, 3.716152399738982*^9}, {
   3.71615248121527*^9, 3.716152559428122*^9}, {3.7161525918326807`*^9, 
   3.716152633515026*^9}, {3.716152668037731*^9, 3.7161526706456404`*^9}, {
   3.716152712967104*^9, 3.7161527148847303`*^9}, {3.7161527870180407`*^9, 
   3.716152788633006*^9}, {3.716152939216608*^9, 
   3.7161529595475287`*^9}},ExpressionUUID->"d1d5af92-e564-43db-b2ae-\
74281ef08e34"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "\<\"D0\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"D1\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"D10\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"D11\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"D12\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"D13\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"D14\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"D15\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"D16\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"D17\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"D18\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"D19\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"D2\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"D22\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"D23\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"D24\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"D27\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"D28\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"D29\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"D3\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"D30\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"D5\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"D6\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"D7\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"D8\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"D9\"\>", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7161527292868137`*^9, 3.7161528571814957`*^9, 
  3.716153004561504*^9},ExpressionUUID->"10194e79-2be0-4c0c-b3cd-\
7841dae8ed62"],

Cell[BoxData[
 StyleBox[
  TagBox[
   TagBox[
    RowBox[{"NetChain", 
     RowBox[{"[", 
      PanelBox[
       DynamicModuleBox[{NeuralNetworks`Private`NetChain`assoc3 = Association[
        "Type" -> "Chain", "Nodes" -> 
         Association[
          "1" -> Association[
            "Type" -> "Convolution", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`Private`DummyRawArray[{20, 3, 5, 5}], "Biases" -> 
               NeuralNetworks`Private`DummyRawArray[{20}]], "Parameters" -> 
             Association[
              "OutputChannels" -> 20, "KernelSize" -> {5, 5}, 
               "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
               "Dilation" -> {1, 1}, "Dimensionality" -> 2, "InputChannels" -> 
               3, "$GroupNumber" -> 1, "$InputSize" -> {100, 35}, 
               "$OutputSize" -> {96, 31}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{3, 100, 35}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{20, 96, 31}, NeuralNetworks`RealT]]], 
           "2" -> Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {20, 96, 31}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{20, 96, 31}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{20, 96, 31}, NeuralNetworks`RealT]]], 
           "3" -> Association[
            "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
               "PaddingSize" -> {0, 0}, "Function" -> Max, "Dimensionality" -> 
               2, "Channels" -> 20, "$InputSize" -> {96, 31}, 
               "$OutputSize" -> {48, 15}, "$MXPoolingConvention" -> "valid", 
               "$MXGlobalPool" -> False], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{20, 96, 31}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{20, 48, 15}, NeuralNetworks`RealT]]], 
           "4" -> Association[
            "Type" -> "Convolution", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`Private`DummyRawArray[{50, 20, 5, 5}], "Biases" -> 
               NeuralNetworks`Private`DummyRawArray[{50}]], "Parameters" -> 
             Association[
              "OutputChannels" -> 50, "KernelSize" -> {5, 5}, 
               "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
               "Dilation" -> {1, 1}, "Dimensionality" -> 2, "InputChannels" -> 
               20, "$GroupNumber" -> 1, "$InputSize" -> {48, 15}, 
               "$OutputSize" -> {44, 11}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{20, 48, 15}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{50, 44, 11}, NeuralNetworks`RealT]]], 
           "5" -> Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {50, 44, 11}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{50, 44, 11}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{50, 44, 11}, NeuralNetworks`RealT]]], 
           "6" -> Association[
            "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
               "PaddingSize" -> {0, 0}, "Function" -> Max, "Dimensionality" -> 
               2, "Channels" -> 50, "$InputSize" -> {44, 11}, 
               "$OutputSize" -> {22, 5}, "$MXPoolingConvention" -> "valid", 
               "$MXGlobalPool" -> False], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{50, 44, 11}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{50, 22, 5}, NeuralNetworks`RealT]]], 
           "7" -> Association[
            "Type" -> "Flatten", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Level" -> DirectedInfinity[1], "OutputSize" -> {5500}, 
               "$InputSize" -> {50, 22, 5}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{50, 22, 5}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{5500}, NeuralNetworks`RealT]]], "8" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> NeuralNetworks`Private`DummyRawArray[{500, 5500}], 
               "Biases" -> NeuralNetworks`Private`DummyRawArray[{500}]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {500}, "$OutputSize" -> 500, "$InputSize" -> 
               5500, "$InputDimensions" -> {5500}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{5500}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], "9" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {500}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], "10" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> NeuralNetworks`Private`DummyRawArray[{26, 500}], 
               "Biases" -> NeuralNetworks`Private`DummyRawArray[{26}]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {26}, "$OutputSize" -> 26, "$InputSize" -> 
               500, "$InputDimensions" -> {500}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{26}, NeuralNetworks`RealT]]], "11" -> 
           Association[
            "Type" -> "Softmax", "Arrays" -> Association[], "Parameters" -> 
             Association[], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{26}, NeuralNetworks`RealT]], 
             "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{26}, NeuralNetworks`RealT]]]], 
         "Edges" -> {
          NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Inputs", "Input"], 
           NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "10", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Outputs", "Output"] -> 
           NeuralNetworks`NetPath["Nodes", "11", "Outputs", "Output"]}, 
         "Inputs" -> Association["Input" -> NetEncoder["Image", 
             Association[
             "ImageSize" -> {35, 100}, "ColorSpace" -> "RGB", "ColorChannels" -> 
              3, "MeanImage" -> None], 
             NeuralNetworks`TensorT[{3, 100, 35}, NeuralNetworks`RealT]]], 
         "Outputs" -> Association["Output" -> NetDecoder["Class", 
             Association[
             "Labels" -> {{"D0"}, {"D1"}, {"D10"}, {"D11"}, {"D12"}, {
                "D13"}, {"D14"}, {"D15"}, {"D16"}, {"D17"}, {"D18"}, {
                "D19"}, {"D2"}, {"D22"}, {"D23"}, {"D24"}, {"D27"}, {"D28"}, {
                "D29"}, {"D3"}, {"D30"}, {"D5"}, {"D6"}, {"D7"}, {"D8"}, {
                "D9"}}, "Dimensions" -> 26], 
             NeuralNetworks`TensorT[{26}, NeuralNetworks`RealT]]]], 
        NeuralNetworks`Private`NetChain`opart, 
        NeuralNetworks`Private`NetChain`part, 
        NeuralNetworks`Private`NetChain`selected = Null}, 
        DynamicBox[GridBox[{{
            NeuralNetworks`Private`NetChain`MouseClickBoxes[
             TagBox[
              GridBox[{{
                 TagBox[
                  TagBox[
                  "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"Input\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"3\"", "\"100\"", "\"35\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"20\"", "\"96\"", "\"31\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"20\"", "\"96\"", "\"31\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"20\"", "\"48\"", "\"15\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"50\"", "\"44\"", "\"11\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"50\"", "\"44\"", "\"11\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"50\"", "\"22\"", "\"5\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"5500\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"26\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"11\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"26\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                  "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"Output\"", 
                   Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"class\"", 
                   Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
             If[
              ListQ[NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
               If[NeuralNetworks`Private`NetChain`opart === 
                NeuralNetworks`Private`NetChain`part, 
                NeuralNetworks`Private`NetChain`selected = Null; 
                NeuralNetworks`Private`NetChain`opart = Null, 
                NeuralNetworks`Private`NetChain`selected = 
                 Part[NeuralNetworks`Private`NetChain`assoc3, 
                   Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                NeuralNetworks`Private`NetChain`opart = 
                 NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
           NeuralNetworks`Private`NetChain`fmtSelected[
           NeuralNetworks`Private`NetChain`selected, 
            NeuralNetworks`Private`NetChain`part]}, 
          GridBoxSpacings -> {"Columns" -> {{1}}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}],
         ImageSizeCache->{271., {114., 120.}},
         TrackedSymbols:>{NeuralNetworks`Private`NetChain`selected}],
        Initialization:>{NetChain}],
       BaselinePosition->Automatic], "]"}]}],
    False],
   Deploy],
  LineBreakWithin->False]], "Output",
 CellChangeTimes->{3.7161527292868137`*^9, 3.7161528571814957`*^9, 
  3.716153061014291*^9},ExpressionUUID->"d67e483e-9bf1-4b45-b6de-\
b7dcfd9a91af"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trained", "[", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJwtl1ms5FZax09VuVbv5a2822WXXYur7Kpy7ft276279936pm8v9E2vmZ5O
L0mahGwiQ5aOgsIomQGizMxDBg0S4WEWDSjSaJAQoCAYIUACzTwgxCuCB14Q
Eo1vB+v4+LN8/PI7f/38WT99fu9GGADwMBFMe1cfTR48uPryPhHcHN59ePvm
3evXlndfuH7z+oP26dmya8FpBGccBEsiAImEAAjeTIIwCAVlMMJngwBRAD4F
YZMHYiQVk0AqHkPRFAbIcSQ1icfxK2HwDRAuvyd8XIg4vIEJr+oCgTLJ3Ktm
fEpmhvpvcS9g/Ith1QTF3zcp2s4C5ltF0URdWP1EjUyOSt0S5C3ySStV559V
rxWKj4Cl5l+yBvddm2/ccPzLN1XWhDKbr/EFhG+eZO6Va7c5o5Y7zpe/VtS7
r1+/PTsaVtjfflCv/0urPMgvnty73nOXYOXO+N5m6bC6fPbt288Vlq31H711
s7D57bx3eLz634fPHHLb1PZ3909H1b3a8vbOyXbnsLz6+drpkXPknsO2dv91
fXvt/jK7uRjsnh+v7y1v7u6Mj2bHmx+uXhwLy3nX7kG/2qgcHzzMZi8dbHbP
r6/t3D5cbuyvrP3R47X2dnr1ysXRDMQSAb+AasAZPrsGFQAIgAALkHAYoAH7
78UsNFUEGMjGErF0sCLeSsQcGIwOMTCLczNdyH6GX/JpgKfh+ktxFktlwtqH
PNyMmMUH99EjFeAA4N+mjsWQjZXCxocqIihKnPsOHuokiXoGWDOSUjEx/Wdi
z5G3BqyYmwvKDm1o1LsmvWOqPgGs/qkkEpr1FjMD7rYCPH4nWzjX5BvKm9vl
A9WkrQO1+semyuTqT07muDWU97eaz/TYpdFYW7930Rib7sedZaf2olveajWf
NNx1fFFobvT2S1Sj1Nv07nVKvfPz9yer1doI6/x4OvnPhjM4yQ4mG5XhcKXr
DE9WXmj3u5f9m96ynW95/k9a3/z384X+SnvmrU787qK36h9c2R/3Bv0PHrdb
lUh3yxtqqVgAEwrIBUSDxCIgSn4FO0gyEYTXDopL0edySAlQIEUiSQggUeDF
QDhBhK4GGU7gPg2Tj+QEDdpQGqtcI2MYy0rEKzKWQJKxOzs4kkhRaET8g3RS
IdIEn1Lel1QGQUz9XSHFY1pcvG0DPckBSXqbwzVuc8Io4khTTzJCHfkNKbcp
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
      "], {{0, 100}, {35, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{35, 100},
    PlotRange->{{0, 35}, {0, 100}}], ",", 
   RowBox[{"{", 
    RowBox[{"\"\<TopProbabilities\>\"", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7161527987753*^9, 3.7161528212433224`*^9}, {
  3.71615296914187*^9, 
  3.7161529807575183`*^9}},ExpressionUUID->"7f4ef858-e7b6-4ff6-a64f-\
0aceddd189f2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"{", "\<\"D3\"\>", "}"}], "\[Rule]", "0.15047521889209747`"}], 
   ",", 
   RowBox[{
    RowBox[{"{", "\<\"D15\"\>", "}"}], "\[Rule]", "0.11354496330022812`"}], 
   ",", 
   RowBox[{
    RowBox[{"{", "\<\"D19\"\>", "}"}], "\[Rule]", "0.10914745926856995`"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.716152821902213*^9, 3.71615290113214*^9, 
  3.716153063310532*^9},ExpressionUUID->"91d26432-8c94-4ea3-9702-\
9095f68ec33d"]
}, Open  ]]
},
WindowSize->{755, 697},
WindowMargins->{{Automatic, 217}, {25, Automatic}},
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (April 18, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 5069, 125, 563, "Input", "ExpressionUUID" -> \
"d1d5af92-e564-43db-b2ae-74281ef08e34"],
Cell[5652, 149, 1338, 31, 50, "Output", "ExpressionUUID" -> \
"10194e79-2be0-4c0c-b3cd-7841dae8ed62"],
Cell[6993, 182, 27797, 578, 274, "Output", "ExpressionUUID" -> \
"d67e483e-9bf1-4b45-b6de-b7dcfd9a91af"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34827, 765, 4868, 86, 117, "Input", "ExpressionUUID" -> \
"7f4ef858-e7b6-4ff6-a64f-0aceddd189f2"],
Cell[39698, 853, 490, 14, 30, "Output", "ExpressionUUID" -> \
"91d26432-8c94-4ea3-9702-9095f68ec33d"]
}, Open  ]]
}
]
*)

