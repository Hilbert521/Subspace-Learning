(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     46117,       1001]
NotebookOptionsPosition[     45227,        973]
NotebookOutlinePosition[     45571,        988]
CellTagsIndexPosition[     45528,        985]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<C:\\\\Users\\\\Alexander Liao\\\\Google Drive\\\\ANN-Optimized Robot\
\\\\TrainingData10.2.17\\\\1.jpg\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "2"}], ",", 
     RowBox[{"i", "\[LessEqual]", "300"}], ",", 
     RowBox[{"i", "++"}], ",", 
     RowBox[{
      RowBox[{"b", "=", 
       RowBox[{"Import", "[", 
        RowBox[{
        "\"\<C:\\\\Users\\\\Alexander Liao\\\\Google Drive\\\\ANN-Optimized \
Robot\\\\TrainingData10.2.17\\\\\>\"", "<>", 
         RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<.jpg\>\""}], "]"}]}],
       ";", 
      RowBox[{"a", "=", " ", 
       RowBox[{"Join", "[", 
        RowBox[{"a", ",", "b"}], "]"}]}]}]}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<C:\\\\Users\\\\Alexander Liao\\\\Google Drive\\\\ANN-Optimized Robot\
\\\\TrainingData10.2.17\\\\Nope.xlsx\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MLdata", "=", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MLdata", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "=", 
   RowBox[{
    RowBox[{"a", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", 
    RowBox[{"s", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "1"}], "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "2"}], ",", 
     RowBox[{"i", "\[LessEqual]", "200"}], ",", 
     RowBox[{"i", "++"}], ",", 
     RowBox[{
      RowBox[{"MLdata", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{"a", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", 
       RowBox[{"s", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "i"}], "]"}], "]"}]}]}]}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"classes", " ", "=", " ", 
   RowBox[{"Union", "@", 
    RowBox[{"Values", "[", "MLdata", "]"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lenet", "=", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ConvolutionLayer", "[", 
        RowBox[{"20", ",", "5"}], "]"}], ",", "Ramp", ",", 
       RowBox[{"PoolingLayer", "[", 
        RowBox[{"2", ",", "2"}], "]"}], ",", 
       RowBox[{"ConvolutionLayer", "[", 
        RowBox[{"50", ",", "5"}], "]"}], ",", "Ramp", ",", 
       RowBox[{"PoolingLayer", "[", 
        RowBox[{"2", ",", "2"}], "]"}], ",", 
       RowBox[{"FlattenLayer", "[", "]"}], ",", "500", ",", "Ramp", ",", "31",
        ",", 
       RowBox[{"SoftmaxLayer", "[", "]"}]}], "}"}], ",", 
     RowBox[{"\"\<Output\>\"", "\[Rule]", 
      RowBox[{"NetDecoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Class\>\"", ",", "classes"}], "}"}], "]"}]}], ",", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", 
      RowBox[{"NetEncoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Image\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"35", ",", "100"}], "}"}]}], "}"}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"trained", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"lenet", ",", "MLdata", ",", 
    RowBox[{"MaxTrainingRounds", "\[Rule]", "15"}]}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.716149999601266*^9, 3.716150003568726*^9}, {
   3.716150295153393*^9, 3.7161503000655346`*^9}, {3.716150351097437*^9, 
   3.7161503916777487`*^9}, {3.7161504415084925`*^9, 
   3.7161504483677874`*^9}, {3.71615048514225*^9, 3.716150487944744*^9}, {
   3.71615055639606*^9, 3.7161505574336205`*^9}, {3.716150638933126*^9, 
   3.716150659538414*^9}, 3.716150690897428*^9, {3.716150746490903*^9, 
   3.716150750771845*^9}, {3.7161513248634863`*^9, 3.7161513368782854`*^9}, {
   3.7161519556235504`*^9, 3.7161519906242046`*^9}, {3.716152049164366*^9, 
   3.7161520554956126`*^9}, {3.716152348957034*^9, 3.716152399738982*^9}, {
   3.71615248121527*^9, 3.716152559428122*^9}, {3.7161525918326807`*^9, 
   3.716152633515026*^9}, {3.716152668037731*^9, 3.7161526706456404`*^9}, {
   3.716152712967104*^9, 3.7161527148847303`*^9}, {3.7161527870180407`*^9, 
   3.716152788633006*^9}, {3.716152939216608*^9, 3.7161529595475287`*^9}, {
   3.716212686287289*^9, 3.716212718779398*^9}, {3.716212789865575*^9, 
   3.7162127907185993`*^9}, {3.7162168378266506`*^9, 
   3.7162168534892206`*^9}, {3.716216911555564*^9, 3.716216925600323*^9}, {
   3.716217055929843*^9, 3.7162171090689154`*^9}, {3.716217152421732*^9, 
   3.7162172112090397`*^9}, {3.716217418581414*^9, 3.7162174370497313`*^9}, {
   3.716217594985936*^9, 3.716217606217482*^9}, 
   3.716217876578018*^9},ExpressionUUID->"5ea429c6-c3de-4bce-876b-\
1299975c6c20"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "\<\"D0\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"D1\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"D10\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"D11\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"D12\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"D13\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"D14\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"D15\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"D16\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"D17\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"D18\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"D19\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"D2\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"D20\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"D21\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"D22\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"D23\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"D24\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"D25\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"D26\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"D27\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"D28\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"D29\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"D3\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"D30\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"D4\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"D5\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"D6\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"D7\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"D8\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"D9\"\>", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7161527292868137`*^9, 3.7161528571814957`*^9, 3.716153004561504*^9, 
   3.716153224306042*^9, 3.7162127368999653`*^9, 3.716212833894046*^9, 
   3.7162168660614843`*^9, 3.716216957310671*^9, {3.716217073577677*^9, 
   3.716217117079717*^9}, {3.716217165342664*^9, 3.716217184376024*^9}, 
   3.716217219392299*^9, 3.7162174450053854`*^9, 3.716217617437664*^9, 
   3.716217884655465*^9},ExpressionUUID->"6b8c5d25-b073-4618-b3be-\
828edd9e0391"],

Cell[BoxData[
 StyleBox[
  TagBox[
   TagBox[
    RowBox[{"NetChain", 
     RowBox[{"[", 
      PanelBox[
       DynamicModuleBox[{NeuralNetworks`Private`NetChain`assoc3 = Association[
        "Type" -> "Chain", "Nodes" -> 
         Association[
          "1" -> Association[
            "Type" -> "Convolution", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`Private`DummyRawArray[{20, 3, 5, 5}], "Biases" -> 
               NeuralNetworks`Private`DummyRawArray[{20}]], "Parameters" -> 
             Association[
              "OutputChannels" -> 20, "KernelSize" -> {5, 5}, 
               "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
               "Dilation" -> {1, 1}, "Dimensionality" -> 2, "InputChannels" -> 
               3, "$GroupNumber" -> 1, "$InputSize" -> {100, 35}, 
               "$OutputSize" -> {96, 31}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{3, 100, 35}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{20, 96, 31}, NeuralNetworks`RealT]]], 
           "2" -> Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {20, 96, 31}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{20, 96, 31}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{20, 96, 31}, NeuralNetworks`RealT]]], 
           "3" -> Association[
            "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
               "PaddingSize" -> {0, 0}, "Function" -> Max, "Dimensionality" -> 
               2, "Channels" -> 20, "$InputSize" -> {96, 31}, 
               "$OutputSize" -> {48, 15}, "$MXPoolingConvention" -> "valid", 
               "$MXGlobalPool" -> False], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{20, 96, 31}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{20, 48, 15}, NeuralNetworks`RealT]]], 
           "4" -> Association[
            "Type" -> "Convolution", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`Private`DummyRawArray[{50, 20, 5, 5}], "Biases" -> 
               NeuralNetworks`Private`DummyRawArray[{50}]], "Parameters" -> 
             Association[
              "OutputChannels" -> 50, "KernelSize" -> {5, 5}, 
               "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
               "Dilation" -> {1, 1}, "Dimensionality" -> 2, "InputChannels" -> 
               20, "$GroupNumber" -> 1, "$InputSize" -> {48, 15}, 
               "$OutputSize" -> {44, 11}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{20, 48, 15}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{50, 44, 11}, NeuralNetworks`RealT]]], 
           "5" -> Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {50, 44, 11}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{50, 44, 11}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{50, 44, 11}, NeuralNetworks`RealT]]], 
           "6" -> Association[
            "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
               "PaddingSize" -> {0, 0}, "Function" -> Max, "Dimensionality" -> 
               2, "Channels" -> 50, "$InputSize" -> {44, 11}, 
               "$OutputSize" -> {22, 5}, "$MXPoolingConvention" -> "valid", 
               "$MXGlobalPool" -> False], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{50, 44, 11}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{50, 22, 5}, NeuralNetworks`RealT]]], 
           "7" -> Association[
            "Type" -> "Flatten", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Level" -> DirectedInfinity[1], "OutputSize" -> {5500}, 
               "$InputSize" -> {50, 22, 5}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{50, 22, 5}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{5500}, NeuralNetworks`RealT]]], "8" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> NeuralNetworks`Private`DummyRawArray[{500, 5500}], 
               "Biases" -> NeuralNetworks`Private`DummyRawArray[{500}]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {500}, "$OutputSize" -> 500, "$InputSize" -> 
               5500, "$InputDimensions" -> {5500}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{5500}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], "9" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {500}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], "10" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> NeuralNetworks`Private`DummyRawArray[{31, 500}], 
               "Biases" -> NeuralNetworks`Private`DummyRawArray[{31}]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {31}, "$OutputSize" -> 31, "$InputSize" -> 
               500, "$InputDimensions" -> {500}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{31}, NeuralNetworks`RealT]]], "11" -> 
           Association[
            "Type" -> "Softmax", "Arrays" -> Association[], "Parameters" -> 
             Association[], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{31}, NeuralNetworks`RealT]], 
             "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{31}, NeuralNetworks`RealT]]]], 
         "Edges" -> {
          NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Inputs", "Input"], 
           NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "10", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Outputs", "Output"] -> 
           NeuralNetworks`NetPath["Nodes", "11", "Outputs", "Output"]}, 
         "Inputs" -> Association["Input" -> NetEncoder["Image", 
             Association[
             "ImageSize" -> {35, 100}, "ColorSpace" -> "RGB", "ColorChannels" -> 
              3, "MeanImage" -> None], 
             NeuralNetworks`TensorT[{3, 100, 35}, NeuralNetworks`RealT]]], 
         "Outputs" -> Association["Output" -> NetDecoder["Class", 
             Association[
             "Labels" -> {{"D0"}, {"D1"}, {"D10"}, {"D11"}, {"D12"}, {
                "D13"}, {"D14"}, {"D15"}, {"D16"}, {"D17"}, {"D18"}, {
                "D19"}, {"D2"}, {"D20"}, {"D21"}, {"D22"}, {"D23"}, {"D24"}, {
                "D25"}, {"D26"}, {"D27"}, {"D28"}, {"D29"}, {"D3"}, {"D30"}, {
                "D4"}, {"D5"}, {"D6"}, {"D7"}, {"D8"}, {"D9"}}, "Dimensions" -> 
              31], 
             NeuralNetworks`TensorT[{31}, NeuralNetworks`RealT]]]], 
        NeuralNetworks`Private`NetChain`opart, 
        NeuralNetworks`Private`NetChain`part, 
        NeuralNetworks`Private`NetChain`selected = Null}, 
        DynamicBox[GridBox[{{
            NeuralNetworks`Private`NetChain`MouseClickBoxes[
             TagBox[
              GridBox[{{
                 TagBox[
                  TagBox[
                  "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"Input\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"3\"", "\"100\"", "\"35\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"20\"", "\"96\"", "\"31\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"20\"", "\"96\"", "\"31\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"20\"", "\"48\"", "\"15\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"50\"", "\"44\"", "\"11\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"50\"", "\"44\"", "\"11\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"50\"", "\"22\"", "\"5\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"5500\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"31\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"11\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"31\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                  "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"Output\"", 
                   Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"class\"", 
                   Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
             If[
              ListQ[NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
               If[NeuralNetworks`Private`NetChain`opart === 
                NeuralNetworks`Private`NetChain`part, 
                NeuralNetworks`Private`NetChain`selected = Null; 
                NeuralNetworks`Private`NetChain`opart = Null, 
                NeuralNetworks`Private`NetChain`selected = 
                 Part[NeuralNetworks`Private`NetChain`assoc3, 
                   Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                NeuralNetworks`Private`NetChain`opart = 
                 NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
           NeuralNetworks`Private`NetChain`fmtSelected[
           NeuralNetworks`Private`NetChain`selected, 
            NeuralNetworks`Private`NetChain`part]}, 
          GridBoxSpacings -> {"Columns" -> {{1}}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}],
         ImageSizeCache->{271., {114., 120.}},
         TrackedSymbols:>{NeuralNetworks`Private`NetChain`selected}],
        Initialization:>{NetChain}],
       BaselinePosition->Automatic], "]"}]}],
    False],
   Deploy],
  LineBreakWithin->False]], "Output",
 CellChangeTimes->{
  3.7161527292868137`*^9, 3.7161528571814957`*^9, 3.716153004561504*^9, 
   3.716153224306042*^9, 3.7162127368999653`*^9, 3.716212833894046*^9, 
   3.7162168660614843`*^9, 3.716216957310671*^9, {3.716217073577677*^9, 
   3.716217117079717*^9}, {3.716217165342664*^9, 3.716217184376024*^9}, 
   3.716217219392299*^9, 3.7162174450053854`*^9, 3.716217617437664*^9, 
   3.7162179877412744`*^9},ExpressionUUID->"e54430d9-4e47-4469-ad9d-\
cc7272fd556b"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7162128040670214`*^9, 
  3.716212806832206*^9}},ExpressionUUID->"69206caf-a89d-40d6-980f-\
54d3a1e0e6dd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trained", "[", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
3BsHB/zzaXG+2+v+L5sDRwo=
      "], {{0, 100}, {35, 0}}, {0, 255},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{35, 100},
    PlotRange->{{0, 35}, {0, 100}}], ",", 
   RowBox[{"{", 
    RowBox[{"\"\<TopProbabilities\>\"", ",", "20"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7161527987753*^9, 3.7161528212433224`*^9}, {
  3.71615296914187*^9, 3.7161529807575183`*^9}, {3.716212947001849*^9, 
  3.716212958920467*^9}, {3.7162177929727573`*^9, 
  3.7162178551901517`*^9}},ExpressionUUID->"90321a36-aea1-4aba-8e20-\
26391316022b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"{", "\<\"D16\"\>", "}"}], "\[Rule]", "0.41697144508361816`"}], 
   ",", 
   RowBox[{
    RowBox[{"{", "\<\"D19\"\>", "}"}], "\[Rule]", "0.17494359612464905`"}], 
   ",", 
   RowBox[{
    RowBox[{"{", "\<\"D13\"\>", "}"}], "\[Rule]", "0.15962912142276764`"}], 
   ",", 
   RowBox[{
    RowBox[{"{", "\<\"D17\"\>", "}"}], "\[Rule]", "0.050222598016262054`"}], 
   ",", 
   RowBox[{
    RowBox[{"{", "\<\"D15\"\>", "}"}], "\[Rule]", "0.025705883279442787`"}], 
   ",", 
   RowBox[{
    RowBox[{"{", "\<\"D12\"\>", "}"}], "\[Rule]", "0.0234666857868433`"}], 
   ",", 
   RowBox[{
    RowBox[{"{", "\<\"D10\"\>", "}"}], "\[Rule]", "0.0231211856007576`"}], 
   ",", 
   RowBox[{
    RowBox[{"{", "\<\"D5\"\>", "}"}], "\[Rule]", "0.0202876478433609`"}], ",", 
   RowBox[{
    RowBox[{"{", "\<\"D30\"\>", "}"}], "\[Rule]", "0.01780608855187893`"}], 
   ",", 
   RowBox[{
    RowBox[{"{", "\<\"D2\"\>", "}"}], "\[Rule]", "0.017240306362509727`"}], 
   ",", 
   RowBox[{
    RowBox[{"{", "\<\"D23\"\>", "}"}], "\[Rule]", "0.016101695597171783`"}], 
   ",", 
   RowBox[{
    RowBox[{"{", "\<\"D0\"\>", "}"}], "\[Rule]", "0.01403995044529438`"}], 
   ",", 
   RowBox[{
    RowBox[{"{", "\<\"D1\"\>", "}"}], "\[Rule]", "0.01173853687942028`"}], 
   ",", 
   RowBox[{
    RowBox[{"{", "\<\"D28\"\>", "}"}], "\[Rule]", "0.011068379506468773`"}], 
   ",", 
   RowBox[{
    RowBox[{"{", "\<\"D27\"\>", "}"}], "\[Rule]", "0.004016270861029625`"}], 
   ",", 
   RowBox[{
    RowBox[{"{", "\<\"D18\"\>", "}"}], "\[Rule]", "0.0033009101171046495`"}], 
   ",", 
   RowBox[{
    RowBox[{"{", "\<\"D7\"\>", "}"}], "\[Rule]", "0.003013007575646043`"}], 
   ",", 
   RowBox[{
    RowBox[{"{", "\<\"D3\"\>", "}"}], "\[Rule]", "0.0018714719917625189`"}], 
   ",", 
   RowBox[{
    RowBox[{"{", "\<\"D24\"\>", "}"}], "\[Rule]", "0.00124550040345639`"}], 
   ",", 
   RowBox[{
    RowBox[{"{", "\<\"D4\"\>", "}"}], "\[Rule]", "0.0010862945346161723`"}]}],
   "}"}]], "Output",
 CellChangeTimes->{
  3.716152821902213*^9, 3.71615290113214*^9, 3.716153063310532*^9, 
   3.716212961068389*^9, 3.7162173111193724`*^9, 3.716217578360495*^9, 
   3.716217758275967*^9, 3.7162178030382085`*^9, {3.716217841816512*^9, 
   3.7162178555512624`*^9}, 
   3.716217993734377*^9},ExpressionUUID->"e53d3143-606f-4367-8a53-\
5928ebf94682"]
}, Open  ]]
},
WindowSize->{755, 697},
WindowMargins->{{Automatic, 396}, {48, Automatic}},
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (April 18, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 7146, 153, 658, "Input", "ExpressionUUID" -> \
"5ea429c6-c3de-4bce-876b-1299975c6c20"],
Cell[7729, 177, 1873, 41, 69, "Output", "ExpressionUUID" -> \
"6b8c5d25-b073-4618-b3be-828edd9e0391"],
Cell[9605, 220, 28174, 584, 274, "Output", "ExpressionUUID" -> \
"e54430d9-4e47-4469-ad9d-cc7272fd556b"]
}, Open  ]],
Cell[37794, 807, 154, 3, 30, "Input", "ExpressionUUID" -> \
"69206caf-a89d-40d6-980f-54d3a1e0e6dd"],
Cell[CellGroupData[{
Cell[37973, 814, 4879, 86, 117, "Input", "ExpressionUUID" -> \
"90321a36-aea1-4aba-8e20-26391316022b"],
Cell[42855, 902, 2356, 68, 107, "Output", "ExpressionUUID" -> \
"e53d3143-606f-4367-8a53-5928ebf94682"]
}, Open  ]]
}
]
*)

