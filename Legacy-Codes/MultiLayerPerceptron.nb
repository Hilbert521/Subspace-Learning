(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     47817,       1025]
NotebookOptionsPosition[     47032,        999]
NotebookOutlinePosition[     47374,       1014]
CellTagsIndexPosition[     47331,       1011]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"MLdata", "=", 
   RowBox[{"ResourceObject", "[", "\"\<CIFAR-10\>\"", "]"}]}], ";", 
  RowBox[{"MLdata", "=", 
   RowBox[{"ResourceData", "[", 
    RowBox[{"MLdata", ",", "\"\<TrainingData\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"classes", " ", "=", " ", 
   RowBox[{"Union", "@", 
    RowBox[{"Values", "[", "MLdata", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"net", "=", 
  RowBox[{"NetChain", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"LinearLayer", "[", "1024", "]"}], ",", 
      RowBox[{"LinearLayer", "[", "64", "]"}], ",", 
      RowBox[{"LinearLayer", "[", "64", "]"}], ",", 
      RowBox[{"LinearLayer", "[", "64", "]"}], ",", "Ramp", ",", "10", ",", 
      RowBox[{"SoftmaxLayer", "[", "]"}]}], "}"}], ",", 
    RowBox[{"\"\<Output\>\"", "\[Rule]", 
     RowBox[{"NetDecoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Class\>\"", ",", "classes"}], "}"}], "]"}]}], ",", 
    RowBox[{"\"\<Input\>\"", "\[Rule]", 
     RowBox[{"NetEncoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Image\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"32", ",", "32"}], "}"}]}], "}"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"trained", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"net", ",", "MLdata", ",", 
    RowBox[{"MaxTrainingRounds", "\[Rule]", "4"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7174499904639454`*^9, 3.717450011705989*^9}, {
  3.717450377330884*^9, 3.7174503894150667`*^9}, {3.7174504204606247`*^9, 
  3.717450516328927*^9}, {3.7174505849940896`*^9, 3.717450585159545*^9}, {
  3.717450617421919*^9, 3.717450625323296*^9}, {3.7174509203857446`*^9, 
  3.717450943731908*^9}, {3.717450994243848*^9, 3.7174509952462726`*^9}, {
  3.717451050911619*^9, 3.717451051248414*^9}, {3.7174510822109995`*^9, 
  3.717451085524033*^9}, {3.717451462445489*^9, 3.7174514655074277`*^9}, {
  3.717451619147826*^9, 
  3.7174516210233116`*^9}},ExpressionUUID->"5a3242ad-24e0-4d98-9a91-\
c6d1a528bcf3"],

Cell[BoxData[
 StyleBox[
  TagBox[
   TagBox[
    RowBox[{"NetChain", 
     RowBox[{"[", 
      PanelBox[
       DynamicModuleBox[{NeuralNetworks`Private`NetChain`assoc3 = Association[
        "Type" -> "Chain", "Nodes" -> 
         Association[
          "1" -> Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{1024, 3072}, NeuralNetworks`RealT], 
               "Biases" -> NeuralNetworks`Nullable[
                 NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {1024}, "$OutputSize" -> 1024, 
               "$InputSize" -> 3072, "$InputDimensions" -> {3, 32, 32}], 
             "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{3, 32, 32}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]]], "2" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{64, 1024}, NeuralNetworks`RealT], 
               "Biases" -> NeuralNetworks`Nullable[
                 NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {64}, "$OutputSize" -> 64, "$InputSize" -> 
               1024, "$InputDimensions" -> {1024}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1024}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]]], "3" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{64, 64}, NeuralNetworks`RealT], 
               "Biases" -> NeuralNetworks`Nullable[
                 NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {64}, "$OutputSize" -> 64, "$InputSize" -> 
               64, "$InputDimensions" -> {64}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
             "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]]], "4" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{64, 64}, NeuralNetworks`RealT], 
               "Biases" -> NeuralNetworks`Nullable[
                 NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {64}, "$OutputSize" -> 64, "$InputSize" -> 
               64, "$InputDimensions" -> {64}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
             "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]]], "5" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {64}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
             "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]]], "6" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{10, 64}, NeuralNetworks`RealT], 
               "Biases" -> NeuralNetworks`Nullable[
                 NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {10}, "$OutputSize" -> 10, "$InputSize" -> 
               64, "$InputDimensions" -> {64}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
             "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], "7" -> 
           Association[
            "Type" -> "Softmax", "Arrays" -> Association[], "Parameters" -> 
             Association[], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
             "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]]], 
         "Edges" -> {
          NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Inputs", "Input"], 
           NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Outputs", "Output"] -> 
           NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"]}, 
         "Inputs" -> Association["Input" -> NetEncoder["Image", 
             Association[
             "ImageSize" -> {32, 32}, "ColorSpace" -> "RGB", "ColorChannels" -> 
              3, "MeanImage" -> None], 
             NeuralNetworks`TensorT[{3, 32, 32}, NeuralNetworks`RealT]]], 
         "Outputs" -> Association["Output" -> NetDecoder["Class", 
             Association[
             "Labels" -> {
               "airplane", "automobile", "bird", "cat", "deer", "dog", "frog",
                 "horse", "ship", "truck"}, "Dimensions" -> 10], 
             NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]]], 
        NeuralNetworks`Private`NetChain`opart, 
        NeuralNetworks`Private`NetChain`part, 
        NeuralNetworks`Private`NetChain`selected = Null}, 
        DynamicBox[GridBox[{{
            NeuralNetworks`Private`NetChain`MouseClickBoxes[
             TagBox[
              GridBox[{{
                 TagBox[
                  TagBox[
                  "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"Input\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"3\"", "\"32\"", "\"32\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                  "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"Output\"", 
                   Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"class\"", 
                   Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 ItemBox[
                  StyleBox["\"(uninitialized)\"", 
                   RGBColor[0.66, 0, 0], Small, StripOnInput -> False], 
                  Alignment -> Center, StripOnInput -> False], 
                 "\[SpanFromLeft]", "\[SpanFromLeft]"}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
             If[
              ListQ[NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
               If[NeuralNetworks`Private`NetChain`opart === 
                NeuralNetworks`Private`NetChain`part, 
                NeuralNetworks`Private`NetChain`selected = Null; 
                NeuralNetworks`Private`NetChain`opart = Null, 
                NeuralNetworks`Private`NetChain`selected = 
                 Part[NeuralNetworks`Private`NetChain`assoc3, 
                   Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                NeuralNetworks`Private`NetChain`opart = 
                 NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
           NeuralNetworks`Private`NetChain`fmtSelected[
           NeuralNetworks`Private`NetChain`selected, 
            NeuralNetworks`Private`NetChain`part]}, 
          GridBoxSpacings -> {"Columns" -> {{1}}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}],
         ImageSizeCache->{236., {87., 93.}},
         TrackedSymbols:>{NeuralNetworks`Private`NetChain`selected}],
        Initialization:>{NetChain}],
       BaselinePosition->Automatic], "]"}]}],
    False],
   Deploy],
  LineBreakWithin->False]], "Output",
 CellChangeTimes->{
  3.7174500047173295`*^9, {3.7174504061058407`*^9, 3.717450447750106*^9}, {
   3.7174504935720887`*^9, 3.717450531153055*^9}, 3.717450632482191*^9, 
   3.717450958232081*^9, 3.7174510030828*^9, {3.7174510659818296`*^9, 
   3.717451093740858*^9}, 3.7174514717462296`*^9, 3.717451631534892*^9, 
   3.7174517541260047`*^9},ExpressionUUID->"577cdab1-b31c-4c13-bd25-\
0a5643e86160"],

Cell[BoxData[
 StyleBox[
  TagBox[
   TagBox[
    RowBox[{"NetChain", 
     RowBox[{"[", 
      PanelBox[
       DynamicModuleBox[{NeuralNetworks`Private`NetChain`assoc3 = Association[
        "Type" -> "Chain", "Nodes" -> 
         Association[
          "1" -> Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> NeuralNetworks`Private`DummyRawArray[{1024, 3072}],
                "Biases" -> NeuralNetworks`Private`DummyRawArray[{1024}]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {1024}, "$OutputSize" -> 1024, 
               "$InputSize" -> 3072, "$InputDimensions" -> {3, 32, 32}], 
             "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{3, 32, 32}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]]], "2" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> NeuralNetworks`Private`DummyRawArray[{64, 1024}], 
               "Biases" -> NeuralNetworks`Private`DummyRawArray[{64}]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {64}, "$OutputSize" -> 64, "$InputSize" -> 
               1024, "$InputDimensions" -> {1024}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1024}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]]], "3" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> NeuralNetworks`Private`DummyRawArray[{64, 64}], 
               "Biases" -> NeuralNetworks`Private`DummyRawArray[{64}]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {64}, "$OutputSize" -> 64, "$InputSize" -> 
               64, "$InputDimensions" -> {64}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
             "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]]], "4" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> NeuralNetworks`Private`DummyRawArray[{64, 64}], 
               "Biases" -> NeuralNetworks`Private`DummyRawArray[{64}]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {64}, "$OutputSize" -> 64, "$InputSize" -> 
               64, "$InputDimensions" -> {64}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
             "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]]], "5" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {64}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
             "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]]], "6" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> NeuralNetworks`Private`DummyRawArray[{10, 64}], 
               "Biases" -> NeuralNetworks`Private`DummyRawArray[{10}]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {10}, "$OutputSize" -> 10, "$InputSize" -> 
               64, "$InputDimensions" -> {64}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
             "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], "7" -> 
           Association[
            "Type" -> "Softmax", "Arrays" -> Association[], "Parameters" -> 
             Association[], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
             "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]]], 
         "Edges" -> {
          NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Inputs", "Input"], 
           NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Outputs", "Output"] -> 
           NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"]}, 
         "Inputs" -> Association["Input" -> NetEncoder["Image", 
             Association[
             "ImageSize" -> {32, 32}, "ColorSpace" -> "RGB", "ColorChannels" -> 
              3, "MeanImage" -> None], 
             NeuralNetworks`TensorT[{3, 32, 32}, NeuralNetworks`RealT]]], 
         "Outputs" -> Association["Output" -> NetDecoder["Class", 
             Association[
             "Labels" -> {
               "airplane", "automobile", "bird", "cat", "deer", "dog", "frog",
                 "horse", "ship", "truck"}, "Dimensions" -> 10], 
             NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]]], 
        NeuralNetworks`Private`NetChain`opart, 
        NeuralNetworks`Private`NetChain`part, 
        NeuralNetworks`Private`NetChain`selected = Null}, 
        DynamicBox[GridBox[{{
            NeuralNetworks`Private`NetChain`MouseClickBoxes[
             TagBox[
              GridBox[{{
                 TagBox[
                  TagBox[
                  "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"Input\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"3\"", "\"32\"", "\"32\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                  "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"Output\"", 
                   Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"class\"", 
                   Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
             If[
              ListQ[NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
               If[NeuralNetworks`Private`NetChain`opart === 
                NeuralNetworks`Private`NetChain`part, 
                NeuralNetworks`Private`NetChain`selected = Null; 
                NeuralNetworks`Private`NetChain`opart = Null, 
                NeuralNetworks`Private`NetChain`selected = 
                 Part[NeuralNetworks`Private`NetChain`assoc3, 
                   Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                NeuralNetworks`Private`NetChain`opart = 
                 NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
           NeuralNetworks`Private`NetChain`fmtSelected[
           NeuralNetworks`Private`NetChain`selected, 
            NeuralNetworks`Private`NetChain`part]}, 
          GridBoxSpacings -> {"Columns" -> {{1}}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}],
         ImageSizeCache->{236., {80., 86.}},
         TrackedSymbols:>{NeuralNetworks`Private`NetChain`selected}],
        Initialization:>{NetChain}],
       BaselinePosition->Automatic], "]"}]}],
    False],
   Deploy],
  LineBreakWithin->False]], "Output",
 CellChangeTimes->{
  3.7174500047173295`*^9, {3.7174504061058407`*^9, 3.717450447750106*^9}, {
   3.7174504935720887`*^9, 3.717450531153055*^9}, 3.717450632482191*^9, 
   3.717450958232081*^9, 3.7174510030828*^9, {3.7174510659818296`*^9, 
   3.717451093740858*^9}, 3.7174514717462296`*^9, 3.717451631534892*^9, 
   3.7174518469269524`*^9},ExpressionUUID->"87b65dbc-d501-4e73-b25c-\
3abb08f3bdce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"trained", "[", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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

      "], {{0, 32}, {32, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{32, 32},
    PlotRange->{{0, 32}, {0, 32}}], "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7174507584520235`*^9, 3.717450767804582*^9}, {
   3.7174508223484015`*^9, 3.7174508851256814`*^9}, {3.717451279181877*^9, 
   3.7174513163953223`*^9}, 3.717451742083442*^9, {3.71745192898077*^9, 
   3.7174519645658484`*^9}, {3.717452015884735*^9, 3.7174520167518244`*^9}, {
   3.7174520607326527`*^9, 3.7174520614038534`*^9}, {3.717452925664013*^9, 
   3.7174530219676666`*^9}, {3.717453238064687*^9, 
   3.717453240679668*^9}},ExpressionUUID->"b306f90f-0884-4877-ae13-\
ff921a1c35d2"],

Cell[BoxData["\<\"cat\"\>"], "Output",
 CellChangeTimes->{
  3.7174532623168926`*^9},ExpressionUUID->"c2626820-a9f7-46e4-b11d-\
2888976d47b1"]
}, Open  ]]
},
WindowSize->{766, 736},
WindowMargins->{{3, Automatic}, {Automatic, 21}},
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (April 18, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 2027, 46, 145, "Input", "ExpressionUUID" -> \
"5a3242ad-24e0-4d98-9a91-c6d1a528bcf3"],
Cell[2610, 70, 19965, 421, 220, "Output", "ExpressionUUID" -> \
"577cdab1-b31c-4c13-bd25-0a5643e86160"],
Cell[22578, 493, 19299, 407, 206, "Output", "ExpressionUUID" -> \
"87b65dbc-d501-4e73-b25c-3abb08f3bdce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41914, 905, 4957, 86, 70, "Input", "ExpressionUUID" -> \
"b306f90f-0884-4877-ae13-ff921a1c35d2"],
Cell[46874, 993, 142, 3, 30, "Output", "ExpressionUUID" -> \
"c2626820-a9f7-46e4-b11d-2888976d47b1"]
}, Open  ]]
}
]
*)

